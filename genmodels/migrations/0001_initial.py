# Generated by Django 4.2.20 on 2025-04-09 19:46

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Choice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Capability",
            fields=[
                (
                    "choice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="genmodels.choice",
                    ),
                ),
            ],
            bases=("genmodels.choice",),
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "choice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="genmodels.choice",
                    ),
                ),
            ],
            bases=("genmodels.choice",),
        ),
        migrations.CreateModel(
            name="InputType",
            fields=[
                (
                    "choice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="genmodels.choice",
                    ),
                ),
            ],
            bases=("genmodels.choice",),
        ),
        migrations.CreateModel(
            name="OutputType",
            fields=[
                (
                    "choice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="genmodels.choice",
                    ),
                ),
            ],
            bases=("genmodels.choice",),
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "choice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="genmodels.choice",
                    ),
                ),
            ],
            bases=("genmodels.choice",),
        ),
        migrations.CreateModel(
            name="Technology",
            fields=[
                (
                    "choice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="genmodels.choice",
                    ),
                ),
            ],
            bases=("genmodels.choice",),
        ),
        migrations.CreateModel(
            name="TimeToProduceOutput",
            fields=[
                (
                    "choice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="genmodels.choice",
                    ),
                ),
            ],
            bases=("genmodels.choice",),
        ),
        migrations.CreateModel(
            name="MLModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("year", models.PositiveIntegerField()),
                ("website", models.URLField()),
                ("paper", models.CharField(max_length=500)),
                ("dataset", models.CharField(max_length=500)),
                ("output_length", models.CharField(max_length=100)),
                ("license_type", models.CharField(max_length=100)),
                ("is_free", models.BooleanField()),
                ("is_open_source", models.BooleanField()),
                ("has_real_time_inference", models.BooleanField()),
                ("are_checkpoints_available", models.BooleanField()),
                ("can_finetune", models.BooleanField()),
                ("can_train_from_scratch", models.BooleanField()),
                ("low_resource", models.BooleanField()),
                ("interactions", models.CharField(max_length=500)),
                ("capabilities", models.ManyToManyField(to="genmodels.capability")),
                ("categories", models.ManyToManyField(to="genmodels.category")),
                ("input_types", models.ManyToManyField(to="genmodels.inputtype")),
                ("output_types", models.ManyToManyField(to="genmodels.outputtype")),
                ("tags", models.ManyToManyField(to="genmodels.tag")),
                ("technology", models.ManyToManyField(to="genmodels.technology")),
                (
                    "time_to_produce_output",
                    models.ManyToManyField(to="genmodels.timetoproduceoutput"),
                ),
            ],
        ),
    ]
